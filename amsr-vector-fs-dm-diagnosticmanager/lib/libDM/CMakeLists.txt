###############################################################################
#    Model Element   : CMakeLists
#    Component       : DiagnosticManager
#    Copyright       : Copyright (C) 2017, Vector Informatik GmbH.
#    File Name       : CMakeLists.txt
###############################################################################
message(STATUS "-------------------------------------------------------------")
set(PACKAGE_VERSION 0.0.1)

set(INSTALL_CMAKE_DIR lib/cmake)
set(INSTALL_LIB_DIR lib)
set(INSTALL_INCLUDE_DIR include/DiagnosticManager)
set(INSTALL_SRC_DIR src/DiagnosticManager)
set(LIBRARY_NAME DM)

find_package(vac REQUIRED)
if (vac_FOUND)
  message(STATUS "Package vac found: ${vac_FOUND}")
  message(STATUS "VAC_INCLUDE_DIRS: ${VAC_INCLUDE_DIRS}")
  message(STATUS "VAC_LIBRARIES: ${VAC_LIBRARIES}")
  set(LIB_DM_DEPENDENCIES ${LIB_DM_DEPENDENCIES} vac)
endif ()

find_package(ara-logging REQUIRED)
if(ara-logging_FOUND)
  message(STATUS "Package ara-logging found: ${ara-logging_FOUND}")
  message(STATUS "ARA_LOGGING_INCLUDE_DIRS: ${ARA_LOGGING_INCLUDE_DIRS}")
  message(STATUS "ARA_LOGGING_LIBRARIES: ${ARA_LOGGING_LIBRARIES}")
  set(LIB_DM_DEPENDENCIES ${LIB_DM_DEPENDENCIES} ara-logging)
endif()

set(LIB_DM_DEPENDENCIES ${LIB_DM_DEPENDENCIES} PARENT_SCOPE)

include_directories("${CMAKE_CURRENT_SOURCE_DIR}/include")
set(LIB_DM_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/include" PARENT_SCOPE)

file(GLOB_RECURSE LIB_DM_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc)
set(LIB_DM_SRCS ${LIB_DM_SRCS} PARENT_SCOPE)

message(STATUS "-------------------------------------------------------------")

#create a static library *.a
#add_library(${LIBRARY_NAME} STATIC ${LIB_DM_SRCS})

#install(
#  TARGETS ${LIBRARY_NAME}
#  EXPORT "${LIBRARY_NAME}Targets"
#  ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
#  COMPONENT dev
#)

install(
  DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/
  DESTINATION ${INSTALL_INCLUDE_DIR}
  COMPONENT dev
)

install(
  DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src/
  DESTINATION ${INSTALL_SRC_DIR}
  COMPONENT dev
)

# Export targets
# export(TARGETS ${LIBRARY_NAME} FILE "${PROJECT_BINARY_DIR}/lib/libDM/libDMTargets.cmake")
# Store the current build directory in the CMake user package registry for package ${LIBRARY_NAME}
# The find_package command may consider the directory while searching for package ${LIBRARY_NAME}
# This creates an folder ${LIBRARY_NAME} in the ~/.cmake/packages directory with a file containing
# the path to the directory containing this CMakeLists.txt of this project
export(PACKAGE ${LIBRARY_NAME})
#install(EXPORT "${LIBRARY_NAME}Targets" DESTINATION ${INSTALL_CMAKE_DIR}/${LIBRARY_NAME})

include_directories("${CMAKE_CURRENT_SOURCE_DIR}/include" ${VAC_INCLUDE_DIRS})

set(CONF_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/lib/libDM/include")
set(CONF_SOURCES "${LIB_DM_SRCS}")
set(CONF_DEPENDENCIES "${LIB_DM_DEPENDENCIES}")
configure_file(
  ${PROJECT_SOURCE_DIR}/cmake/DMConfig.cmake.in
  "${PROJECT_BINARY_DIR}/lib/libDM/DMConfig.cmake" @ONLY
)

# creates absolute paths for three varaibles: INSTALL_SRC_DIR, INSTALL_INCLUDE_DIR, INSTALL_CMAKE_DIR
foreach(p SRC INCLUDE CMAKE)
  set(var INSTALL_${p}_DIR)
  if(NOT IS_ABSOLUTE "${${var}}")
    set(ABSOLUTE_${var} "${CMAKE_INSTALL_PREFIX}/${${var}}")
  endif()
endforeach()

file(RELATIVE_PATH REL_INCLUDE_DIR "${ABSOLUTE_INSTALL_CMAKE_DIR}" "${ABSOLUTE_INSTALL_INCLUDE_DIR}")
file(RELATIVE_PATH REL_SRC_DIR "${ABSOLUTE_INSTALL_CMAKE_DIR}" "${ABSOLUTE_INSTALL_SRC_DIR}")

message(STATUS "REL_INCLUDE_DIR: ${REL_INCLUDE_DIR}")
message(STATUS "REL_SRC_DIR: ${REL_SRC_DIR}")

# ${DM_CMAKE_DIR} is generated by DMConfig.cmake.in
set(CONF_INCLUDE_DIRS "\${DM_CMAKE_DIR}/../${REL_INCLUDE_DIR}")
set(CONF_SOURCES "\${DM_CMAKE_DIR}/../${REL_SRC_DIR}")
configure_file(
  ${PROJECT_SOURCE_DIR}/cmake/DMConfig.cmake.in
  "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/DMConfig.toinstall.cmake" @ONLY
)

install(
  FILES ${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/DMConfig.toinstall.cmake
  DESTINATION ${INSTALL_CMAKE_DIR}/${LIBRARY_NAME}
  RENAME DMConfig.cmake
)
